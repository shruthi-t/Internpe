tic tac toe game
board = [[1, 2, 3],
         [4, 5, 6],
         [7, 8, 9]]
a = len(board)
b = len(board[0])
Taken = []
Already = []

class Player:
    def __init__(self, name, Taken):
        self.name = name
        run = True
        while run:
            if 'X' in Taken:
                self.pawn = 'Y'
                run = False
                break
            elif 'Y' in Taken:
                self.pawn = 'X'
                run = False
                break
            else:
                self.pawn = input(f"Enter X or Y ({name}): ")
                self.pawn = self.pawn.capitalize()
                if self.pawn == 'X':
                    Taken.append(self.pawn)
                    run = False
                elif self.pawn == 'Y':
                    Taken.append(self.pawn)
                    run = False
                else:
                    print("Please enter only X or Y")

    def check(self, board):
        for i in range(len(board)):
            if board[i][0] == self.pawn and board[i][1] == self.pawn and board[i][2] == self.pawn:
                return True
        for j in range(len(board[0])):
            if board[0][j] == self.pawn and board[1][j] == self.pawn and board[2][j] == self.pawn:
                return True
        if board[0][0] == self.pawn and board[1][1] == self.pawn and board[2][2] == self.pawn:
            return True
        if board[0][2] == self.pawn and board[1][1] == self.pawn and board[2][0] == self.pawn:
            return True
        return False

class Board:
    def game_board(self, board):
        for i in range(a):
            if i != 0:
                print("_ _ _ _ _")
            for j in range(b):
                if j != 0:
                    print("|", end='')
                if j == 2:
                    print(board[i][j])
                else:
                    print(board[i][j], end='')

    def enter_position(self, Already, name):
        run = True
        while run:
            try:
                self.position = int(input(f"Enter a number between 1-9 {name}: "))
            except ValueError:
                print("Sorry... only numbers are allowed")
            else:
                if 1 <= self.position <= 9:
                    if self.position not in Already:
                        Already.append(self.position)
                        run = False
                    else:
                        print("Space is already occupied")
                else:
                    print("Enter a number between 1-9")

    def place_hold(self, board, choice):
        if 6 < self.position < 10:
            bo = board[2]
            bo[self.position - 7] = choice
        elif 3 < self.position < 7:
            bo = board[1]
            bo[self.position - 4] = choice
        else:
            bo = board[0]
            bo[self.position - 1] = choice

print("Each box represents a number")
print("For example ....\n1|2|3\n4|5|6\n7|8|9")

name1 = input("P1 name: ")
n1 = name1.capitalize()
name2 = input("P2 name: ")
n2 = name2.capitalize()

P1 = Player(n1, Taken)
P2 = Player(n2, Taken)

print(f"{n1} is {P1.pawn} and {n2} is {P2.pawn}")

running = True
while running:
    if len(Already) < 9:
        main = Board()
        main.game_board(board)
        main.enter_position(Already, n1)
        main.place_hold(board, P1.pawn)
        if P1.check(board):
            print(f"{n1} Wins!!")
            break
    else:
        print("The game is drawn")
        break

    if len(Already) < 9:
        main = Board()
        main.game_board(board)
        main.enter_position(Already, n2)
        main.place_hold(board, P2.pawn)
        if P2.check(board):
            print(f"{n2} Wins!!")
            break
    else:
        print("The game is drawn")
        break
